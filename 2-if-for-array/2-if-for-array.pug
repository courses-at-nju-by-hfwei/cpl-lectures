section
  h1(style="font-variant: small-caps") If, For, Array
  hr

  br
  h4 Hengfeng Wei
  h4 <u>hfwei@nju.edu.cn</u>

  //- br
  img(src = "./2-if-for-array/figs/C.png", alt = "The C Programming Language",
      width = 200, height = auto)
  p Oct. 18, 2021

section
  h2 Review
  hr

  br
  p Variables &emsp; <mark>Constants</mark> &emsp; Data Types
  br
  p Operators &emsp; Expressions &emsp; Assignment Statements
  br
  p I/O (Input/Output)

section
  h2 Constants
  hr

  br
  ul
    li <code>int</code>: <code>42</code>
    li <code>double</code>: <code>3.14</code>
    li <code>char</code>: <code>'c'</code>
    li <code>string</code>: <code>"Hello World"</code>
  br
  p Literal constants (字面常量)
  br
  p.fragment <code><mark>const double PI = 3.14159;</mark></code>
  p.fragment <code>PI</code> is still a <em>variable</em>.

section
  h2 Overview
  hr

  br
  h3 If Statement (If 语句)
  br
  h3 For Statement (For 语句)
  br
  h3 Logical Expressions (逻辑表达式)
  br
  h3 Array (数组)

section
  h2(class = "r-fit-text" style="font-variant: small-caps") "Talk is Cheap. Show me the Code."
  hr

  img(src = "./2-if-for-array/figs/lets-code.jpeg" alt = "Let's Code"
    width = 600 height = auto)

  br
  p <code>min leap</code>
  p <code>sum.c min.c</code>
//- ---------- If (Min) -------------
section
  h2 Min
  hr

  br
  img(src = "./2-if-for-array/figs/minimum.jpg", alt = "Minimum Logo",
      width = 600, height = auto)

section
  h2 Min of Two
  hr

  br
  p Given two integers $a$ and $b$,
  p to compute their minimum.

  br
  p $\mathit{min} = \min\{a, b\}$

section
  h2 <code>if</code>
  hr

  br
  img(src = "./2-if-for-array/figs/if-syntax.png" alt = "if-else"
    width = 400 height = auto)
  p The <code>else</code> part is <em>optional</em>.

section
  h2 <code>if</code>
  hr

  p(class = "r-fit-text") Multiple declarations and statements surrounded by <code>{}</code>
  <div class="row">
    <div class="column">
      img(src = "./2-if-for-array/figs/if-syntax-with-braces.png" alt = "if-else with braces"
        width = 360 height = auto)
    </div>
    <div class="column">
      img.fragment(src = "./2-if-for-array/figs/if-syntax-no-braces.png" alt = "if-else without braces"
        width = 400 height = auto)
    </div>
  </div>
  h3.fragment Always Use <code>{}</code>!

section
  h2(class = "r-fit-text") Relational Operators (关系运算符)
  hr

  br
  <div class="row">
    <div class="column">
      img(src = "./2-if-for-array/figs/relational-operator.png" alt = "Relational Operator"
        width = 400 height = auto)
    </div>
    <div class="column">
      ul
        li <code>>=</code>
        li <code><=</code>
        li <code>></code>
        li <code><</code>
        li <code><mark>==</mark></code> (equal to)
        li <code>!=</code> (not equal to)
    </div>
  </div>

section
  h2(class = "r-fit-text") Relational Expressions (关系表达式)
  hr

  img(src = "./2-if-for-array/figs/relational-expression.png" alt = "Relational Expression"
    width = 400 height = auto)
  p(class = "r-fit-text") Relational expressions have values 0 (<code>false</code>) or 1 (<code>true</code>).
  br
  p.fragment <mark>In C, non-zero numbers are treated as 1 (<code>true</code>).</mark>

section
  h2 <code>?:</code>
  hr

  br
  p <code><mark>min = a >= b ? b : a;</mark></code>

  br
  p Conditional Expression (条件表达式)
  p Ternary Operator (三目运算符)

  br
  h2.fragment Do Not Use it Too Much!

section
  h2 Min of Three
  hr

  br
  p Given three integers $a$, $b$, and $c$,
  p to compute their minimum.

  br
  p $\mathit{min} = \min\{a, b, c\}$

section
  h2 Nested <code>if</code>
  hr

  img(src = "./2-if-for-array/figs/nested-if.png" alt = "Nested if"
    width = 300 height = auto)

section
  h2 Min of a Set of Numbers
  hr

  br
  p Given a set $A$ of integers,
  p to compute their minimum.

  br
  p $\mathit{min} = \min A$

  img.fragment(src = "./2-if-for-array/figs/loop.jpg" alt = "Loop Logo"
    width = 400 height = auto)
//- ---------- If (Leap) -------------
section
  h2 Leap Year
  hr

  br
  img(src = "./2-if-for-array/figs/leap-year.jpeg" alt = "Leap Year"
    width = 650 height = auto)

section
  h2 Leap Year (1): Nested <code>if</code>
  hr

  img(src = "./2-if-for-array/figs/leap-year-flowchart.png" alt = "Leap Year Flowchart"
    width = 800 height = auto)

section
  h2 Leap Year (2): Nested <code>if</code>
  hr

  br
  img(src = "./2-if-for-array/figs/leap-year-wiki.png" alt = "Leap Year using Else-If"
    width = 1200 height = auto)

section
  h2 Leap Year (3): <code>else-if</code>
  hr

  br
  img(src = "./2-if-for-array/figs/leap-year-elseif.png" alt = "Leap Year using elseif"
    width = 1000 height = auto)

section
  h2(class = "r-fit-text") Leap Year (4): The Ultimate Version
  hr

  br
  p A year is a leap year <em>if</em>
  br
  ul
    li it is divisible by 4 but not by 100,
    li except that years divisible by 400 are leap years.

section
  h2 Logical Operators (逻辑运算符)
  hr

  img(src = "./2-if-for-array/figs/logical-operator.png" alt = "Logical Operator"
    width = 1000 height = auto)

  img(src = "./2-if-for-array/figs/logical-operators.png" alt = "Logical Operators Table"
    width = 300 height = auto)

section
  h2 Logical Expressions (逻辑表达式)
  hr

  br
  img(src = "./2-if-for-array/figs/logical-expression.png" alt = "Logical Expression"
    width = 1000 height = auto)
  p(class = "r-fit-text") Logical expressions have values <code>0</code> (<code>false</code>) or <code>1</code> (<code>true</code>).

section
  h2 Short-circuit Evaluation
  hr

  br
  img(src = "./2-if-for-array/figs/logical-expression.png" alt = "Logical Expressions"
    width = 1000 height = auto)
  br
  ul
    li.fragment <code>year = 25</code>
    li.fragment <code>year = 80</code>
//- ---------- For (and Array) -------------
section
  h2 Sum
  hr

  br
  p Given an integer $n \ge 0$, to compute $\sum\limits_{i = 1}^{n} i$.

section
  h2 Increment/Decrement Operators (<code>++</code>, <code>--</code>)
  hr

  br
  ul
    li <code>i++</code>
      ul
        li increment <code>i</code> <em>after</em> its value has been used
    li <code>++i</code>
      ul
        li increment <code>i</code> <em>before</em> its value is used

section
  h2 Increment/Decrement Operators (<code>++</code>, <code>--</code>)
  hr

  br
  p <code>i = 2;</code>
  p <code>j = i * i++;</code>

  br
  p.fragment Undefined Behavior (未定义行为)

section
  h2 For Statement
  hr

  br
  img(src = "./2-if-for-array/figs/for-general.png" alt = "General Structure of For Loops"
    width = 900 height = auto)
  br
  img.fragment(src = "./2-if-for-array/figs/for-special.png" alt = "Common Structure of For Loops"
    width = 900 height = auto)
  br
  img.fragment(src = "./2-if-for-array/figs/for-sum.png" alt = "For Statement in Sum"
    width = 600 height = auto)

section
  h2 Min of a Set of Numbers
  hr

  br
  p Given a set $A$ of integers,
  p to compute their minimum.

  br
  p $\mathit{min} = \min A$

section
  h2 <code>#define NUM 5</code>
  hr

  br
  p Symbolic Constants (符号常量)
  br
  p.fragment <code>#define</code> is a <em>pre-processing directive</em> (预处理指令).

  br
  p.fragment <mark><code>int numbers[NUM] = {0};</code></mark> has a <em>constant</em> size.
  ul
    li.fragment <code>NUM</code> is known at <em>compiler</em> time.

section
  h2 Array Initializer
  hr

  br
  p <code><mark>int numbers[NUM] = {0};</mark></code>

  ul
    li.fragment <code>int numbers[NUM] = {1};</code>
      ul
        li <code>{1, 0, 0, 0, 0}</code>
    li.fragment <code>int numbers[] = {0};</code>
      ul
        li <code>{0}</code>
    li.fragment <code>int numbers[NUM] = {[2] = 1};</code>
      ul
        li <code>{0, 0, 1, 0, 0}</code>
        li See Section 8.1.3

section
  h2 Array Initializer
  hr

  br
  p <code><mark>int numbers[NUM] = {0};</mark></code>

  ul
    li.fragment <del><code>int numbers[NUM] = {};</code></del>
      ul
        li Forbidden in <code>C99</code> (Unfortunately)
        li Allowed by GCC by default (Unfortunately)
    li.fragment <del><code>int numbers[NUM];</code></del>
      ul
        li May contain garbage values
    li.fragment <del><code>int numbers[];</code></del>
      ul
        li You must specify the size so that the compiler can allocate memory for it.

section
  h2 Array Members
  hr

  br
  img(src = "./2-if-for-array/figs/array-members.png" alt = "Array Members"
    width = 800 height = auto)
  p <code>[]</code>: <em>subscript</em> operator (下标运算符)
section
  h1(style="font-variant: small-caps") Recursion; Data Types
  hr

  br
  h4 Hengfeng Wei
  h4 <u>hfwei@nju.edu.cn</u>

  img(src = "./7-data-types/figs/C.png", alt = "The C Programming Language",
      width = 200, height = auto)
  p Nov. 22, 2021

section
  h2 Review
  hr

  br
  h3 Recursion
  img(src = "./6-recursion/figs/recursion-stair.jpg", alt = "Recursion Logo",
      width = 500, height = auto)
  p A function that calls itself.

section
  h2 Recursion
  hr

  br
  h2(style = "font-variant: small-caps") Thinking Recursively
  img(src = "./6-recursion/figs/think-recursively.jpg", alt = "Thinking Recursively",
      width = 600, height = auto)

section
  h2 Overview
  hr

  br
  p Recursion (More Examples)
  br
  h3 Data Types
  br
  p <code>static</code>

section
  h2(class = "r-fit-text" style="font-variant: small-caps") "Talk is Cheap. Show me the Code."
  hr

  br
  img(src = "./7-data-types/figs/coding.png" alt = "Let's Code"
    width = 800 height = auto)

section
  h2 Binary Search
  hr

  br
  img(src = "./7-data-types/figs/binary-search-mario.png" alt = "Binary Search Mario"
    width = 800 height = auto)

  br
  p <code>bsearch-re.c</code>

section
  h2 Merge Sort
  hr

  img(src = "./7-data-types/figs/mergesort-example.png" alt = "MergeSort Example"
    width = 550 height = auto)
  p <code>merge-sort.c</code>

section
  h2 Data Types
  hr

  br
  br
  p The <mark>type</mark> of a variable determines
  br
  ul
    li the set of <em>values</em> it may take on and
    br
    li what <em>operations</em> can be performed on them.
  br
  br
  p.fragment <code>int</code> &emsp; <code>double</code> &emsp; <code>char</code>

section
  h2 Integral Types
  hr

  br
  <div class="row">
    <div class="column">
      p Signed (有符号数)
      ul
        li <code>short int</code>
        li <code>int</code>
        li <code>long</code>
        li <code>long long</code>
    </div>
    <div class="column">
      p Unsigned (无符号数)
      ul
        li <code><mark>bool</mark></code> (<code>stdbool.h</code>)
        li <code>unsigned short int</code>
        li <code>unsigned int</code>
        li <code>unsigned long</code>
        li <code>unsigned long long</code>
    </div>
  </div>
  br
  p.fragment <code>char</code> (<code>unsigned/signed</code>)

section
  h2 Overflow (溢出)
  hr

  br
  ul
    li 有符号整数运算中发生溢出, 程序的行为是<mark>未定义</mark>的。
    li 无符号整数运算中发生溢出, 程序的行为是有定义的。


section
  h2 Integral Promotion (整型提升)
  hr

  br
  br
  ul
    li 定义初始化
    li 赋值操作
    li 参数传递
    li 函数返回值

section
  h2 Integral Promotion (整型提升)
  hr

  br
  img(src = "./7-data-types/figs/conversion.png" alt = "Conversion"
    width = 1500 height = auto)
  p.fragment "Arithmetic operators do not accept types smaller than <mark><code>int</code></mark> as arguments, and integral promotions are automatically applied."

section
  h2 Floating-point Numbers
  hr

  br
  ul
    li <code>float y = 5.0<mark>F</mark></code>
      ul
        li <code>%f</code>
        li <code>%f</code>
    li <code>double x = 5.0</code>
      ul
        li <mark><code>%lf</code></mark>
        li <code>%f</code>
    li <code>long double z = 5.0L</code>
      ul
        li <code>%Lf</code>
        li <code>%Lf</code>

section
  h2 Floating-point Numbers
  hr

  br
  img(src = "./7-data-types/figs/fp-conversion.png" alt = "FP Conversion"
    width = 1000 height = auto)

section
  h2 Floating-point Arithmetic
  hr

  <div class="row">
    <div class="column">
      img(src = "./7-data-types/figs/c-std-book.jpg" alt = "The Standard C Library"
        width = 350 height = auto)
    </div>
    <div class="column">
      br
      br
      img(src = "./7-data-types/figs/bad-news.png", alt = "Bad News"
          width = 400, height = auto)
    </div>
  </div>
  h4.fragment(class = "r-fit-text", style = "font-variant: small-caps") <mark>"Floating-point Arithmetic is Hard."</mark>

section
  h2 Floating-point Arithmetic
  hr

  img(src = "./7-data-types/figs/fp.png", alt = "Floating Point Number Line"
      width = 1000, height = auto)
  p <code><mark>float.h</mark></code> (Section 23.1)

section
  h2 Floating-point Arithmetic
  hr

  br
  br
  ul
    li Overflow (上溢)
    br
    li Underflow (下溢)
    br
    li Significance Loss (精度丢失)
    ul
      li <code>significance.c</code>

section
  h2 Floating-point Arithmetic
  hr

  br
  p "Many applications don't need floating-point arithmetic at all."
  img(src = "./7-data-types/figs/good-news.jpg", alt = "Good News"
      width = 400, height = auto)
  br
  p.fragment Use <code><mark>math.h</mark></code> (Section 23.3) whenever possible.

section
  h2 C 语言安全编码标准
  hr

  br
  img(src = "./7-data-types/figs/cert-c.jpeg", alt = "Cert C Book"
      width = 400, height = auto)

section
  h2 整型数安全编码标准 (INT)
  hr

  br
  ul
    li 使用正确的整数类型
    br
    li 确保无符号整数运算不产生回绕
    br
    li 确保有符号整数运算不造成溢出
    br
    li 确保除法与余数运算不造成除0错误
    br
    li 确保整数转换不会造成数据丢失或者错误解释

section
  h2 浮点数安全编码标准 (FLP)
  hr

  br
  ul
    li 不要使用浮点数变量作为循环计数器
    br
    li 避免或者检测数学函数中的定义域与值域错误
    br
    li 确保浮点数转换在新类型的范围中

section
  h2 References
  hr

  br
  <div class="row">
    <div class="column">
      img(src = "./7-data-types/figs/csapp.jpeg" alt = "CSAPP Book"
        width = 400 height = auto)
    </div>
    <div class="column">
      img(src = "./7-data-types/figs/taocp-2.jpg", alt = "TAOCP Vol2"
          width = 350, height = auto)
    </div>
  </div>